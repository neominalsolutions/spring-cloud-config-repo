server:
  port: 5001

spring:
  application:
    name: order-service
  profiles:
    active: dev
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8180/realms/test-realm
  datasource:
    url: jdbc:postgresql://localhost:5432/order_db
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: update
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  cloud:
    function:
      definition: orderStockRejected;orderStockConfirmed;debeziumEvent
    stream:
      bindings:

        submitOrder-out-0:
          destination: submitOrder
          content-type: application/json

        orderStockRejected-in-0:
          destination: orderStockRejected
          content-type: application/json

        orderStockConfirmed-in-0:
          destination: orderStockConfirmed
          content-type: application/json

        debeziumEvent-in-0:
          destination: submitOrder.public.orders # debezium
          content-type: application/json
          group: debezium-submit-order

      kafka:
        binder:
          auto-create-topics: true
          brokers: localhost:29092
          enable-observation: true # Spring Boot 3+ ve Micrometer Tracing 1.0+ ile birlikte gelen Observation API desteğini etkinleştiriyor ve tracing ile ilgili işleri otomatikleştiriyor.


#euraka_client
eureka:
  client:
    service-url:
      defaultZone: http://localhost:5099/eureka/


#Logback ELK Logging
#logging:
#  config: classpath:logback_spring.xml


# Debezium Kafka Topic: -> submitOrder.public.orders -> <topic.prefix>.<schema-name>.<table-name>