

spring:
  application:
    name: saga-service
  cloud:
    function:
      definition: handleOrderSubmitted,handleStockReserved,handleStockNotAvailable,handlePaidSucceeded,handlePaidFailed
    stream:
      bindings:
        orderSubmitEvent-in-0:
          destination: saga_topics
          group: saga-service
        stockReserved-in-0:
          destination: saga_topics
          group: saga-service
          content-type: application/json
        stockNotAvailable-in-0:
          destination: saga_topics
          group: saga-service
          content-type: application/json
        paidSucceeded-in-0:
          destination: saga_topics
          group: saga-service
          content-type: application/json
        paidFailed-in-0:
          destination: saga_topics
          group: saga-service
          content-type: application/json
        orderSubmitEvent-out-0:
          destination: saga_topics
          content-type: application/json
        stockReserved-out-0:
          destination: saga_topics
          group: saga-service
          content-type: application/json
        stockNotAvailable-out-0:
          destination: saga_topics
          group: saga-service
          content-type: application/json
        paidSucceeded-out-0:
          destination: saga_topics
          group: saga-service
          content-type: application/json
        paidFailed-out-0:
          destination: saga_topics
          group: saga-service
          content-type: application/json

        checkStockEvent-out-0:
            destination: saga_topics
            content-type: application/json
        makePaymentEvent-out-0:
            destination: saga_topics
            content-type: application/json
        completeOrderEvent-out-0:
            destination: saga_topics
            content-type: application/json
        rejectOrderEvent-out-0:
          destination: saga_topics
          content-type: application/json
        releaseStockEvent-out-0:
          destination: saga_topics
          content-type: application/json

        checkStockEvent-in-0:
          destination: saga_topics
          content-type: application/json
        makePaymentEvent-in-0:
          destination: saga_topics
          content-type: application/json
        completeOrderEvent-in-0:
          destination: saga_topics
          content-type: application/json
        rejectOrderEvent-in-0:
          destination: saga_topics
          content-type: application/json
        releaseStockEvent-in-0:
          destination: saga_topics
          content-type: application/json
      kafka:
        binder:
          auto-create-topics: true
          brokers: localhost:9092
